name: Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  build-python-wheels:
    env:
      # Note that we want to build only for a single python version
      # since we're targeting abi3. Sync changes with setup.cfg and
      # the "abi3-pyXX" PyO3 feature in Cargo.toml
      CIBW_SKIP: "cp36-* cp37-* cp38-* cp310-* cp311-* pp* *i686 *win32"
      CIBW_ARCHS_LINUX: ${{matrix.arch}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86_64, aarch64]
        exclude:
          - os: ubuntu-latest
            arch: aarch64
          - os: macos-latest
            arch: aarch64
          - os: windows-latest
            arch: aarch64
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-python@v4
        name: Setup python
        with:
          python-version: '3.x'
      - uses: docker/setup-qemu-action@v2
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel setuptools_rust
      - name: Build wheels on Linux and macOS
        if: runner.os != 'Windows'
        run: |
          export CIBW_BEFORE_BUILD='pip install setuptools-rust && curl -o /tmp/rustup.sh https://sh.rustup.rs && sh /tmp/rustup.sh -y'
          if [ "$(uname)" = Darwin ]; then
            export CIBW_BEFORE_BUILD="$CIBW_BEFORE_BUILD && rustup target add aarch64-apple-darwin"
            export CIBW_ARCHS_MACOS="universal2"
          fi
          python -m cibuildwheel --output-dir wheelhouse crates/python
      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        env:
          CIBW_BEFORE_BUILD: "python3 -m pip install setuptools_rust"
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse crates/python
